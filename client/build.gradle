apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'idea'

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    maven {
        url "http://repo.spring.io/release/"
    }

    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.postgresql:postgresql:9.4-1205-jdbc42'
    }
}

configurations {
    runtime.exclude group: 'commons-logging', module: 'commons-logging'
}

dependencies {
    def springVersion = '4.2.2.RELEASE'

    //stuff
    compile 'commons-lang:commons-lang:2.6'

    //database access
    compile 'org.postgresql:postgresql:9.4-1205-jdbc42'

    //spring
    compile('org.springframework:spring-webmvc:' + springVersion) {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
    compile 'org.springframework:spring-jdbc:' + springVersion
    compile 'org.springframework:spring-context-support:' + springVersion

    compile 'jstl:jstl:1.2'

    //spring json
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    compile 'org.codehaus.jackson:jackson-core-asl:1.9.13'
    compile 'com.fasterxml.jackson.core:jackson-core:2.6.0'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.6.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.0'

    testCompile 'org.testng:testng:6.9.6'
    testCompile 'org.mockito:mockito-all:1.10.19'

    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
}

war {
    archiveName = 'StaffEfficiency.war'

    manifest {
        attributes("Build-Time": new Date())
        attributes("Current-revision": getGitInfo())
    }
}

def getGitInfo() {
    def gitHash = "git rev-parse --short HEAD".execute().text.trim()
    def gitBranch = "git rev-parse --abbrev-ref HEAD".execute().text.trim()
    println "Working branch: " + gitBranch + ", hash: " + gitHash
    return gitHash
}